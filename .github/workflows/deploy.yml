name: CI/CD Deployment

on:
  push:
    branches: [ main ]  # 触发分支

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    # 1. 检出代码
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. 设置Node环境
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    # 3. 安装依赖
    - name: Install dependencies
      run: npm ci  # 使用ci确保依赖版本锁定

    # 4. 项目构建
    - name: Build project
      run: npm run build
      env:
        VITE_API_BASE: ${{ secrets.API_BASE_URL }}  # 注入环境变量

    # 5. SSH密钥配置

    # 关键修复：使用更可靠的SSH配置方法
    - name: Setup SSH
      run: |
        # 1. 确保.ssh目录存在且权限正确
        install -d -m 700 ~/.ssh
        
        # 2. 安全写入私钥（修复格式问题）
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
        
        # 3. 验证端口号有效性
        PORT=${{ secrets.SSH_PORT }}
        if ! [[ $PORT =~ ^[0-9]+$ ]] || [ $PORT -lt 1 ] || [ $PORT -gt 65535 ]; then
          echo "错误：无效端口号 '$PORT'"
          exit 1
        fi
        
        # 4. 安全添加主机到known_hosts
        ssh-keyscan -p $PORT ${{ secrets.SERVER_IP }} > ~/.ssh/known_hosts 2>/dev/null
        chmod 644 ~/.ssh/known_hosts

    # 6. 部署到服务器
    - name: Deploy to Production
      uses: easingthemes/ssh-deploy@v2.2.11
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.SERVER_IP }}
        REMOTE_USER: ${{ secrets.SERVER_USER }}
        REMOTE_PORT: ${{ secrets.SSH_PORT }}
        SOURCE: dist/  # 构建输出目录
        TARGET: ${{ secrets.TARGET_DIR }}  # 服务器目标目录
        ARGS: "-avz --delete --exclude='*.tmp'"
